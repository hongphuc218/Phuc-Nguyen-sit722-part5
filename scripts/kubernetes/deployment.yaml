# Your Solution

# Write Kubernetes Deployment Script
apiVersion: apps/v1 
kind: Deployment 
metadata:
  name: book-catalog 
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: book-catalog 
  template:
    metadata:
      labels:
        app: book-catalog 
    spec:
      containers: 
      - name: book-catalog 
        image: s224806968.azurecr.io/book-catalog:$VERSION
        imagePullPolicy: Always
        env: 
        - name: DATABASE_URL 
          value: $DATABASE_URL 

--- #YAML separator that separate multiple documents within the same file.
apiVersion: v1 
kind: Service 
metadata:
  name: book-catalog 
spec:
  selector:
    app: book-catalog 
  type: LoadBalancer 
  ports:
    - protocol: TCP
      port: 80 
      targetPort: 8000 

---
# Deployment for inventory-management
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers:
      - name: inventory-management
        image: s224806968.azurecr.io/inventory-management:$VERSION
        imagePullPolicy: Always
        env:
        - name: DATABASE_URL
          value: $DATABASE_URL

---
# Service for inventory-management
apiVersion: v1
kind: Service
metadata:
  name: inventory-management
spec:
  selector:
    app: inventory-management
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 81
      targetPort: 8001